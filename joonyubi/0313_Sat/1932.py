#0313_06_1932.py
#정수 삼각형

import sys
r = sys.stdin.readline()

n = int(r())

triangle = []
for i in range(n):
    triangle.append(list(map(int, r().split())))

sum_triangle = []
for i in range(1,n):
    #if cur_idx in range(len(triangle[i]))
        
        triangle[i][i][0] = triangle[i-1][i-1] + triangle[i][i-1]
        
        triangle[i][i][1] = triangle[i-1][i-1] + triangle[i][i]

'''
max() -> 이 값은 최종단계에서 비교시 사용, 그 전에는 모든 경우에 대해 탐색
i번째 idx가 있으면
i+1번째는 idx이거나 idx+1
'''
'''
1 / [0][0]
2 / [0][0]+[1][0] [0][0]+[1][1]
4 / [0][0]+[1][0]+[2][0] 0][0]+[1][0]+[2][1] 0][0]+[1][1]+[2][1] 0][0]+[1][1]+[2][2]

1 / 00
2 / 0010 0011
4 / 001020 001021 001121 001122
8 / 00102030 00102031 00102131 00102132 00112131 00112132 00112232 00112233
16

'''


'''
문제
        7
      3   8
    8   1   0
  2   7   4   4
4   5   2   6   5
위 그림은 크기가 5인 정수 삼각형의 한 모습이다.

맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하라. 아래층에 있는 수는 현재 층에서 선택된 수의 대각선 왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있다.

삼각형의 크기는 1 이상 500 이하이다. 삼각형을 이루고 있는 각 수는 모두 정수이며, 범위는 0 이상 9999 이하이다.

입력
첫째 줄에 삼각형의 크기 n(1 ≤ n ≤ 500)이 주어지고, 둘째 줄부터 n+1번째 줄까지 정수 삼각형이 주어진다.

출력
첫째 줄에 합이 최대가 되는 경로에 있는 수의 합을 출력한다.

예제 입력 1 
5
7
3 8
8 1 0
2 7 4 4
4 5 2 6 5
예제 출력 1 
30
'''